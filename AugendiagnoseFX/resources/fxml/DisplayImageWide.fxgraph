package fxml

import de.eisfeldj.augendiagnosefx.controller.DisplayImageController
import de.eisfeldj.augendiagnosefx.fxelements.OverlayImageView
import javafx.scene.control.Button
import javafx.scene.control.ColorPicker
import javafx.scene.control.ContextMenu
import javafx.scene.control.Label
import javafx.scene.control.MenuItem
import javafx.scene.control.Separator
import javafx.scene.control.Slider
import javafx.scene.control.TextArea
import javafx.scene.control.ToggleButton
import javafx.scene.control.ToggleGroup
import javafx.scene.image.Image
import javafx.scene.image.ImageView
import javafx.scene.layout.ColumnConstraints
import javafx.scene.layout.GridPane
import javafx.scene.layout.RowConstraints
import javafx.scene.layout.VBox

component DisplayImage controlledby DisplayImageController resourcefile "../bundles/Strings.properties" styledwith
"../css/application.css" {
	define ToggleGroup id overlayGroup // 
	GridPane id mDisplayImage {
		styleClass : "displayImage",
		alignment : "CENTER",

		columnConstraints : [
			ColumnConstraints {
				hgrow : "SOMETIMES"
			},
			ColumnConstraints id mOverlayConstraints {
				hgrow : "NEVER",
				minWidth : 75
			},
			ColumnConstraints id mCommentConstraints {
				hgrow : "SOMETIMES",
				percentWidth : 20
			}
		],
		rowConstraints : [
			RowConstraints {
				vgrow : "NEVER"
			},
			RowConstraints {
				vgrow : "SOMETIMES"
			}
		],
		Label id mNameLabel {
			static columnIndex : 0,
			static rowIndex : 0,
			static columnSpan : 3,
			styleClass : "labelTitle"
		},
		OverlayImageView id mDisplayImageView {
			static columnIndex : 0,
			static rowIndex : 1,
			static halignment : "CENTER",
			static valignment : "CENTER",
			static vgrow : "SOMETIMES",
			contextMenu : ContextMenu {
				items : [
					MenuItem {
						text : rstring "menu_store_color_settings",
						onAction : controllermethod storeColorSettings
					},
					MenuItem {
						text : rstring "menu_reset_color_settings",
						onAction : controllermethod resetColorSettings
					},
					MenuItem {
						text : rstring "menu_store_position",
						onAction : controllermethod storeViewPosition
					},
					MenuItem {
						text : rstring "menu_reset_position",
						onAction : controllermethod resetViewPosition
					},
					MenuItem {
						text : rstring "menu_display_full",
						onAction : controllermethod displayInFullWindow
					}
				]
			}
		},
		GridPane id mOverlayPane {
			static columnIndex : 1,
			static rowIndex : 1,
			vgap : 5,
			VBox {
				static columnIndex : 0,
				static rowIndex : 0,
				static columnSpan : 2,
				visible : true,
				managed : true,
				Label {
					styleClass : "labelPanes",
					text : rstring "label_overlays"
				},
				ToggleButton id mBtnOverlayCircle {
					graphic : ImageView {
						image : Image {
							url : location "/img/wheel.png"
						}
					},
					styleClass : "toggleOverlay",
					selected : false,
					alignment : "CENTER",
					onAction : controllermethod btnOverlayPressed,
					maxWidth : const Double#MAX_VALUE,
					toggleGroup : idref overlayGroup
				},
				Separator,
				ToggleButton id mBtnOverlay1 {
					text : rstring "button_overlay_1",
					styleClass : "toggleOverlay",
					selected : false,
					alignment : "CENTER",
					onAction : controllermethod btnOverlayPressed,
					maxWidth : const Double#MAX_VALUE,
					toggleGroup : idref overlayGroup
				},
				ToggleButton id mBtnOverlay2 {
					text : rstring "button_overlay_2",
					styleClass : "toggleOverlay",
					selected : false,
					alignment : "CENTER",
					onAction : controllermethod btnOverlayPressed,
					maxWidth : const Double#MAX_VALUE,
					toggleGroup : idref overlayGroup
				},
				ToggleButton id mBtnOverlay3 {
					text : rstring "button_overlay_3",
					styleClass : "toggleOverlay",
					selected : false,
					alignment : "CENTER",
					onAction : controllermethod btnOverlayPressed,
					maxWidth : const Double#MAX_VALUE,
					toggleGroup : idref overlayGroup
				},
				ToggleButton id mBtnOverlay4 {
					text : rstring "button_overlay_4",
					styleClass : "toggleOverlay",
					selected : false,
					alignment : "CENTER",
					onAction : controllermethod btnOverlayPressed,
					maxWidth : const Double#MAX_VALUE,
					toggleGroup : idref overlayGroup
				},
				ToggleButton id mBtnOverlay5 {
					text : rstring "button_overlay_5",
					styleClass : "toggleOverlay",
					selected : false,
					alignment : "CENTER",
					onAction : controllermethod btnOverlayPressed,
					maxWidth : const Double#MAX_VALUE,
					toggleGroup : idref overlayGroup
				},
				ToggleButton id mBtnOverlay6 {
					text : rstring "button_overlay_6",
					styleClass : "toggleOverlay",
					selected : false,
					alignment : "CENTER",
					onAction : controllermethod btnOverlayPressed,
					maxWidth : const Double#MAX_VALUE,
					toggleGroup : idref overlayGroup
				},
				ToggleButton id mBtnOverlay7 {
					text : rstring "button_overlay_7",
					styleClass : "toggleOverlay",
					selected : false,
					alignment : "CENTER",
					onAction : controllermethod btnOverlayPressed,
					maxWidth : const Double#MAX_VALUE,
					toggleGroup : idref overlayGroup
				},
				ToggleButton id mBtnOverlay8 {
					text : rstring "button_overlay_8",
					styleClass : "toggleOverlay",
					selected : false,
					alignment : "CENTER",
					onAction : controllermethod btnOverlayPressed,
					maxWidth : const Double#MAX_VALUE,
					toggleGroup : idref overlayGroup
				},
				ToggleButton id mBtnOverlay9 {
					text : rstring "button_overlay_9",
					styleClass : "toggleOverlay",
					selected : false,
					alignment : "CENTER",
					onAction : controllermethod btnOverlayPressed,
					maxWidth : const Double#MAX_VALUE,
					toggleGroup : idref overlayGroup
				},
				ToggleButton id mBtnOverlay10 {
					text : rstring "button_overlay_10",
					styleClass : "toggleOverlay",
					selected : false,
					alignment : "CENTER",
					onAction : controllermethod btnOverlayPressed,
					maxWidth : const Double#MAX_VALUE,
					toggleGroup : idref overlayGroup
				},
				ToggleButton id mBtnOverlay11 {
					text : rstring "button_overlay_11",
					styleClass : "toggleOverlay",
					selected : false,
					alignment : "CENTER",
					onAction : controllermethod btnOverlayPressed,
					maxWidth : const Double#MAX_VALUE,
					toggleGroup : idref overlayGroup
				},
				ToggleButton id mBtnOverlay12 {
					text : rstring "button_overlay_12",
					styleClass : "toggleOverlay",
					selected : false,
					alignment : "CENTER",
					onAction : controllermethod btnOverlayPressed,
					maxWidth : const Double#MAX_VALUE,
					toggleGroup : idref overlayGroup
				},
				Separator,
				ColorPicker id mColorPicker {
					maxWidth : const Double#MAX_VALUE,
					onAction : controllermethod onColorChanged
				},
				Separator,
				ToggleButton id mClarityButton {
					alignment : "CENTER",
					maxWidth : const Double#MAX_VALUE,
					onAction : controllermethod btnClarityPressed,
					graphic : ImageView {
						image : Image {
							url : location "/img/clarity.png"
						}
					},
					toggleGroup : idref overlayGroup
				},
				Separator,
				Button id mFullScreenButton {
					alignment : "CENTER",
					maxWidth : const Double#MAX_VALUE,
					onAction : controllermethod displayInFullWindow,
					graphic : ImageView {
						image : Image {
							url : location "/img/fullscreen.png"
						}
					}
				}
			},
			ImageView {
				static columnIndex : 0,
				static rowIndex : 3,
				static halignment : "CENTER",
				image : Image {
					url : location "/img/color_temperature.png"
				},
				pickOnBounds : true,
				onMousePressed : controllermethod showOriginalSaturation,
				onMouseReleased : controllermethod showSlidebarColors
			},
			Slider id mSliderColorTemperature {
				static columnIndex : 0,
				static rowIndex : 4,
				static halignment : "CENTER",
				static vgrow : "SOMETIMES",
				static hgrow : "SOMETIMES",
				orientation : "VERTICAL"
			},
			ImageView {
				static columnIndex : 1,
				static rowIndex : 3,
				static halignment : "CENTER",
				image : Image {
					url : location "/img/saturation.png"
				},
				pickOnBounds : true,
				onMousePressed : controllermethod showOriginalSaturation,
				onMouseReleased : controllermethod showSlidebarColors
			},
			Slider id mSliderSaturation {
				static columnIndex : 1,
				static rowIndex : 4,
				static halignment : "CENTER",
				static vgrow : "SOMETIMES",
				static hgrow : "SOMETIMES",
				orientation : "VERTICAL"
			},
			ImageView {
				static columnIndex : 0,
				static rowIndex : 1,
				static halignment : "CENTER",
				image : Image {
					url : location "/img/brightness.png"
				},
				pickOnBounds : true,
				onMousePressed : controllermethod showOriginalColors,
				onMouseReleased : controllermethod showSlidebarColors
			},
			Slider id mSliderBrightness {
				static columnIndex : 0,
				static rowIndex : 2,
				static halignment : "CENTER",
				static vgrow : "SOMETIMES",
				static hgrow : "SOMETIMES",
				orientation : "VERTICAL"
			},
			ImageView {
				static columnIndex : 1,
				static rowIndex : 1,
				static halignment : "CENTER",
				image : Image {
					url : location "/img/contrast.png"
				},
				pickOnBounds : true,
				onMousePressed : controllermethod showOriginalColors,
				onMouseReleased : controllermethod showSlidebarColors
			},
			Slider id mSliderContrast {
				static columnIndex : 1,
				static rowIndex : 2,
				static halignment : "CENTER",
				static vgrow : "SOMETIMES",
				static hgrow : "SOMETIMES",
				orientation : "VERTICAL"
			}
		},
		GridPane id mCommentPane {
			static columnIndex : 2,
			static rowIndex : 1,
			visible : true,
			managed : true,
			Label {
				static columnIndex : 0,
				static rowIndex : 0,
				styleClass : "labelPanes",
				text : rstring "label_comment"
			},
			TextArea id mTxtImageComment {
				static columnIndex : 0,
				static rowIndex : 1,
				static vgrow : "SOMETIMES",
				promptText : rstring "hint_edit_comment",
				editable : false,
				wrapText : true
			},
			ToggleButton id mBtnEditComment {
				static columnIndex : 0,
				static rowIndex : 2,
				text : rstring "button_edit_comment",
				selected : false,
				alignment : "BOTTOM_CENTER",
				onAction : controllermethod btnEditCommentPressed,
				maxWidth : const Double#MAX_VALUE
			}
		}
	}
}
